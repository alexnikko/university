Introduction
Pharmacokinetic–pharmacodynamic (PKPD) systems are often expressed using ordinary differential equations (ODEs) as a way of directly translating a biological process into simple input–output equations. In some cases these PKPD ODE systems cannot be expressed with exact closed forms due to inclusion of nonlinearity in which either an input or output function is dependent on the response variable itself (e.g. Michaelis–Menten kinetics [ ]). These nonlinear systems are usually solved with time-stepping ODE solvers.
Time-stepping solvers are a series of extremely valuable generic routines, for example the Runge–Kutta methods, that can be applied to numerically solve systems of ODEs. The benefit of time-stepping solvers is their general lack of dependence on the model structure, their solution depending only on the information from derivatives (i.e. slope against time) of the response variable within the time step. Many modelling software applications contain inbuilt time-stepping solvers, for example ADVAN6 in NONMEM [ ], or provide ready access to these solvers (e.g. in R and MATLAB). The generality of their application, i.e. lack of dependence on the underlying model characteristics, does however come at some limitations including accuracy and computation time under some circumstances. To avoid this problem, there is a need to match the time-stepping method to the structure of the problem. A common example is the use of stiff time-stepping solvers (e.g. Gear integrator which is also known to be used in ADVAN8 in NONMEM [ ]) in systems where there is a large difference in the rate constants among the differential equations. These solvers, although generically applicable may result in large unexpected inaccuracies in model predictions which do not occur with analytical solutions, due to their “blinkered” time-stepping properties.
An inductive approximation has been introduced as a technique for generating approximated solutions to nonlinear systems based on iterative linearization [ ]. It uses the intermediate solution obtained from the previous iteration to convert nonlinear ODEs to linear time-varying systems which converges to the system solution to any given level of accuracy. It is noted, however, that even after the inductive approximations, exact closed form solutions may not be always available. However, even in such cases, the system can be analytically as well as numerically solved and therefore provide an approximate solution to an exact problem. In this sense time-stepping ODE solvers provide an approximate solution to an approximate problem.
One of the potential advantages of the inductive approximation is the availability of the analytical solution (that may be available via the integrating factor formula [ ], Laplace transforms, or matrix exponential solutions [ ]) to inform the integration process of the ODEs, and hence some of the potential issues of time-stepping solvers can be avoided. Another advantage lies in generating the linearized system which can be used directly in some settings, e.g. scale reduction (“lumping”) of complex PKPD systems in which exact solutions are only available for linear ODEs [ ] or generating derivatives for construction of the Fisher information matrix [ ].
The inductive approximation has been tested only through a single example [ ]. The primary aim (Aim 1) of this study was to explore the performance of an inductive approximation to convert nonlinear ODEs to linear time-varying systems. The secondary aim (Aim 2) of this study was to explore the potential advantages of analytical methods over time-stepping solutions. For the primary aim, the inductive approximations are applied to three examples, a simple nonlinear pharmacokinetic (PK) model with Michaelis–Menten elimination (E1), an integrated glucose–insulin (IGI) model [ , , ] and an HIV viral load model [ , , ] with recursive feedback systems (E2 and E3, respectively). The difference between E2 and E3 is that the latter is also an example of a stiff system. For the secondary aim, two examples are considered, again E3 with stiff differential equations and a turnover model of luteinizing hormone (LH) with a surge function (E4) [ ].
This paper is divided into the following sections: theory describing the inductive approximation and thereafter methods to analytically obtain the solution; application to examples (E1–E4) and discussion.
Theory
Inductive approximation for systems of nonlinear ordinary differential equations
The inductive solution has been described elsewhere [ ]. A similar concept including its proof of convergence and an estimate of the error has also been introduced elsewhere as the “Picard iteration method” [ ]. Here we briefly cover the main concepts of the inductive approximation. We consider how to solve PKPD systems of nonlinear ODEs. These are commonly defined in the form: $$\frac{{d{\mathbf{y}}}}{dt} = {\mathbf{f}}(t,{\mathbf{y}}) + {\mathbf{A}}(t,{\mathbf{y}}){\mathbf{y}};\quad {\mathbf{y}}(t_{0} ) = {\mathbf{y}}_{ 0}$$ (1) where t is time, y ( t ) = ( y 1 ( t ), …, y m ( t )) T is an m × 1 vector of response variables (i.e. m states in the PKPD system), f ( t , y ) is an m × 1 vector, and A ( t , y ) is an m × m non-singular matrix of which each element includes the corresponding parameters (e.g. rate constants). Generally f corresponds to input functions, and A can be both input and output functions with first-order rate constants. Starting with an initial approximation y [0] ( t ), the solution y [n] ( t ) can be inductively obtained in the form: $$\frac{{d{\mathbf{y}}^{[n]} }}{dt} = {\mathbf{f}}(t,{\mathbf{y}}^{[n - 1]} ) + {\mathbf{A}}(t,{\mathbf{y}}^{[n - 1]} ){\mathbf{y}}^{[n]} ;\quad {\mathbf{y}}^{[n]} (t_{0} ) = {\mathbf{y}}_{ 0}$$ (2) Here y [n−1] ( t ) is a response vector obtained from the previous iteration and hence considered to be a known quantity. Since f and A now depend on a known quantity, y [n−1] ( t ), rather than on the current value of y [n] ( t ), then Eq. 2 now represents a linear time-varying system which can be defined in the form: $$\frac{{d{\mathbf{y}}}}{dt} = {\mathbf{f}}(t) + {\mathbf{A}}(t){\mathbf{y}};\quad {\mathbf{y}}(t_{0} ) = {\mathbf{y}}_{ 0}$$ (3) With the inductive approximation, the response vector can be expressed with the convergent property as: $${\mathbf{y}}(t) = {\mathbf{y}}^{[0]} (t) + \left( {{\mathbf{y}}^{[1]} (t) - {\mathbf{y}}^{[0]} (t)} \right) + \left( {{\mathbf{y}}^{[2]} (t) - {\mathbf{y}}^{[1]} (t)} \right) + \ldots$$ (4) and hence, with a sufficient n , the inductive approximation (Eq. 2 ) will form the true solution of which only the time-derivative is known exactly (Eq. 1 ).
After the inductive approximations, exact closed form solutions to PKPD systems are not always available as the system although linear is time-varying. In this time-varying system, either f or A (or both) (from Eq. 3 ) depend on t . A typical example of this system is a turnover model with drug concentration–time profiles as a driver of pharmacodynamic markers [ ]. However, even in such cases, the system can be analytically as well as numerically solved as the approximation of an exact solution. In this study we apply the following analytical methods for comparison purposes: Integrating factor formula and solution of integrals Laplace transforms with exact/numerical inversion Matrix exponential solution
Analytical methods to the solution of systems of linear time-varying ordinary differential equations
Application of an integrating factor formula
Since Eq. 2 is a linear system, we can apply the integrating factor formula [ ], see also Duffull et al. [ ] for a worked example, to write the solution as: $${\mathbf{y}}^{[n]} (t) = \exp \left( {\int\limits_{{t_{o} }}^{t} {{\mathbf{A}}\left( {\tau ,{\mathbf{y}}^{[n - 1]} (\tau )} \right)\,d\tau } } \right)\,{\mathbf{y}}_{0} + \int\limits_{{t_{0} }}^{t} {\exp \left( {\int\limits_{\tau }^{t} {{\mathbf{A}}\left( {v,{\mathbf{y}}^{[n - 1]} (v)} \right)\,dv} } \right){\mathbf{f}}\left( {\tau ,{\mathbf{y}}^{[n - 1]} (\tau )} \right)\,} d\tau$$ (5) In some cases one or both of integrals may be solved exactly. Even if the exact solution cannot be obtained, a closed form analytical approximation can be used to estimate the integrals such as that attained with Gaussian quadrature [ ] or simply using a linear trapezoidal method.
Laplace transforms
Laplace transforms are well documented and used in PKPD and can be used to obtain the solution of Eq. 2 [ ]. When A is time-invariant, the solution can be written as: $${\mathbf{y}}^{[n]} (t) = \frac{1}{2\pi i}\int\limits_{\gamma - i\infty }^{\gamma + i\infty } {\left( {s{\mathbf{E}} - {\mathbf{A}}} \right)^{ - 1} \left( {{\mathbf{y}}_{0} + {\mathbf{F}}\left( {s,{\mathbf{y}}^{[n - 1]} (s)} \right)} \right)} \,ds$$ (6) where E is an identity matrix, and F ( s ) is the Laplace transform of the original vector f ( t ).
When the inverse Laplace transform (written in Eq. 6 ) cannot be performed exactly, it can be approximated accurately using the rapid Numerical Inverse Laplace Transform (NILT) [ ].
An additional modification needs to be considered in the case when A is time-varying since Laplace transforms are no longer straightforward to apply. In this work we explore the use of a linear approximation, i.e. to use time-invariant values of A within the range of a specified step size (i.e. t ± h where h is the step size), such that the degree of time-varying behavior between two consecutive time points provides a solution that remains appropriately accurate. For example, A ( t ) will be used for Laplace transforms within the range ( t − h , t + h ), and for the next range ( t + h , t + 3 h ), initial values for responses need to be updated with y [n] ( t + h ) obtained from the last point of the current range ( t − h , t + h ). Note that even though this represents a time-stepping solution the solution is dependent on the structural model in order to find solutions at future time points. Hence we believe this method will provide a way of avoiding the pitfalls of generic “blinkered” time-stepping ODE methods.
Matrix exponentials
Another way of analytically solving the system written in Eq. 2 is to use the matrix exponential (ME) solution. This method is used in ADVAN5/7 in NONMEM for solving the system before parameter estimation or simulation [ ]. As is known, the ME solution generally provides an exact prediction only for linear time-invariant systems which is generally defined in the form: $$\frac{{d{\mathbf{y}}}}{dt} = {\mathbf{f}} + {\mathbf{Ay}};\quad {\mathbf{y}}(t_{0} ) = {\mathbf{y}}_{ 0}$$ (7) In this system, f and A are just time-constant, and the ME solution of Eq. 2 with t 0 = 0 can be written as: $${\mathbf{y}}^{[n]} (t) = \exp \left( {t{\mathbf{A}}} \right)\,{\mathbf{y}}_{0} + \left( {\exp \left( {t{\mathbf{A}}} \right) - {\mathbf{E}}} \right)\,{\mathbf{A}}^{ - 1} {\mathbf{f}}$$ (8) Although the decomposition of eigenvalues and eigenvectors may be used to calculate the matrix exponential exp( t A ) they do not always provide an accurate solution especially when the system is complex and/or the eigenvector matrix is poorly conditioned or not positive definite. In these circumstances a Padé approximation of the matrix exponential which does not rely on the condition of the eigenvector matrix can be used and is a versatile method [ ].
Similar to the method of Laplace transforms we handle the time-varying nature of Eq. 2 by creating a linear piece-wise approximation for small h .
Application
In this study four examples are considered: a simple nonlinear PK model with Michaelis–Menten elimination (E1; to address Aim 1) a standard integrated glucose–insulin (IGI) model [ , , ] (E2; to address Aim 1) an HIV viral load model [ , , ] (E3; to address Aim 1 and Aim 2) an empirical surge model [ ] (E4; to address Aim 2).
Examples E1 to E3 are nonlinear ODE systems where an inductive linearization is used. Example 4 is a time-varying linear system which provides a further example to assess analytical solutions (although not requiring linearization). To address our aims the solution of a numerical time-stepping solver with the original nonlinear ODE system (Eq. 1 rather than Eq. 3 ) is used as a reference (R1) since there are no closed-form exact solutions for these systems of nonlinear ODEs.
Figure 1 shows a flow chart to solve nonlinear ODE systems with the inductive approximation. After the inductive approximation, the nonlinear ODE system is converted to a linear time-varying system, and hence either a time-stepping solver or analytical methods described in the previous section can be used (third box from the top in Fig. 1 ). All of the methods tested are: Fig. 1 Flow chart of the inductive approximation. n number of iterations in inductive approximations Original nonlinear ODE system with time-stepping solver (R1) Linearized ODE system with time-stepping solver (N1) Linearized ODE system with integrating factor formula and trapezoidal method for integration (A1) Linearized ODE system with integrating factor formula and Gauss–Legendre quadrature for integration (A2) Linearized ODE system with exact Laplace transforms (A3) Linearized ODE system with numerical inverse Laplace transforms (NILT) (A4) Linearized ODE system with matrix exponential (ME) solution (A5)
The methods A1–A5 correspond to the analytical solutions. The method A4 (NILT) is assessed also in the case when the exact Laplace transforms can be performed. Generally the time-stepping solver ode45 in MATLAB is used for the reference R1 and N1. This is a medium order non-stiff differential equation solver based on the 4th order Runge–Kutta technique and is similar to the method applied in ADVAN6 in NONMEM [ ]. This method automatically determines the step-size for time-stepping but can be forced to step at additional time points using the tspan option in which the user specifies additional user-defined time points.
MATLAB (MATrix LABoratories R2015b, The Math Works Inc) is used through all examples. SAS (Statistical Analysis Software version 9.3, SAS Institute Inc) is partly used to prepare figures.
Simple nonlinear PK model with Michaelis–Menten elimination (E1)
Here the inductive approximation is applied to the PK model with first-order input and Michaelis–Menten output, i.e. $$V\frac{dC}{dt} = k_{a} \,D{ \exp }( - k_{a} t) - \frac{{V_{\hbox{max} } }}{{K_{m} + C}}C;\quad C(t_{0} ) = 0$$ (9) where C ( t 0 ) is the initial concentration of drug in the central compartment with units of mg/L, D is dose (1 mg, single dose) and the parameters, V (volume of distribution), k a (first-order absorption rate constant), V max (maximum velocity of the enzyme), and K m (Michaelis–Menten constant defined as the concentration for which the enzyme is half-maximal rate). The parameter values are given in Table 1 .
Considering the form of Eq. 1 , $$f(t,C) = f(t) = k_{a} \,D{ \exp }( - k_{a} t)/V,\,\,\,\,\,A(t,C) = - \frac{{V_{\hbox{max} } /V}}{{K_{m} + C}}$$ (10) and hence, with the inductive approximation starting with the naive initial approximation of C [0] ( t ) = 0 (for all t ), we can now generate successive approximations inductively which converge to the solution of Eq. 9 , i.e. $$\frac{{dC^{[n]} }}{dt} = k_{a} \,D{ \exp }( - k_{a} t)/V - \frac{{V_{\hbox{max} } /V}}{{K_{m} + C^{[n - 1]} (t)}}C^{[n]} (t);\quad C^{[n]} (t_{0} ) = 0$$ (11) We consider the solution of Eq. 11 with either the method N1 or A1 to A5. The method A2, Gaussian quadrature, has already been applied in the previous work [ ]. The same number of points for abscissas in Gaussian quadrature (=5) was also used in this study. For the trapezoidal method (A1), the increment to approximate the integrals was set to 0.1 h which was also used for the fixed time component used in ode45 . For Laplace transforms (A3), the step size h shown in the previous section was set to 0.1 h. For NILT (A4), the step size h was also set to 0.1 h, and the number of points in fast Fourier transformations to 2 8 . For the ME solution (A5) the step size h was set to 1 h, and the decomposition of eigenvalues and eigenvectors was used to calculate matrix exponentials. Note these values of h have been chosen empirically to provide sufficiently accurate solutions. Table 1 Parameter values in the simple nonlinear PK model with Michaelis–Menten elimination Parameter Description Value V Volume of distribution (L) 1 k a Absorption rate constant (/h) 1 V max Maximum velocity of the enzyme (mg/h) 0.0734 K m Michaelis–Menten constant (mg/L) 0.3672
Figure 2 (a, top panel) shows the results of the first six iterations with respect to the reference method (R1) when using method A5. The results using other methods are shown in the Supplementary Material. Figure 3 (a, top panel) shows the results with respect to the solution time for all methods including the reference R1. All of the methods tested showed that as number of iterations increase the inductive approximations approach the solution provided by the reference R1. A sufficient number of iterations was also similar through all methods tested ( n = 6). However, the solution time varied in the order of 10 5 . The method N1 provided the final solution ( n = 6) with comparable solution time to the reference R1. Although the solution time of methods A1–A4 was longer compared to the reference R1, the method A5 provided the final solution with comparable or even faster solution time. Fig. 2 Inductive approximations coupled with an ME solution (A5) for nonlinear PK model with Michaelis–Menten elimination (E1, a ), integrated glucose-insulin model (E2, b , c for insulin and glucose concentrations, respectively), and HIV viral load model (E3, d , e for viral load and CD4 counts, respectively). Vertical dotted lines in b and c represent timing of meal intake. n number of iterations in inductive approximations, ME matrix exponential (Color figure online) Fig. 3 Solution time in inductive approximations for nonlinear PK model with Michaelis–Menten elimination (E1, a ), integrated glucose-insulin model (E2, b ), and HIV viral load model (E3, c ). An unshaded bar with solid lines represents the averaged solution time per iteration. The whole bar together with both unshaded and shaded areas represent the solution time through all iterations. An unshaded bar with dashed lines represents the solution time of the reference R1 (time-stepping solver with the original nonlinear ODE system, no iterations required). NILT numerical inverse Laplace transform, ME matrix exponential
Integrated glucose–insulin (IGI) model (E2)
Here the inductive approximation is applied to the IGI model of which the schematic representation is shown in Fig. 4 . This model consists of the following seven states: glucose absorption, glucose transit, central glucose, peripheral glucose, glucose effect compartment, central insulin, and insulin effect compartment. All model equations and parameter values can be found in the original paper published by Jauslin et al. [ ]. Fig. 4 Schematic representation of the integrated glucose-insulin model. Full arrows indicate flows, and broken arrows indicate control mechanisms (+, stimulating effect). Q , CL G , CL GI , and k a , kinetic parameters of the glucose; CL I , kinetic parameters of the insulin; k GE and k IE , rate constants for the effect compartments
In this IGI model, insulin concentrations are described by a 1-compartment model with endogenous insulin secretion ( I SEC ) into the central compartment and first-order elimination ( CL I ) as: $$\frac{dI}{dt} = I_{SEC} (t) - \frac{{CL_{I} }}{{V_{I} }} \cdot I(t);\quad I(t_{0} ) = I_{SS} \cdot V_{I}$$ $$I_{SEC} (t) = (I_{SS} \cdot CL_{I} ) \cdot \left( {1 + S_{incr} \cdot G_{T} (t)} \right) \cdot \left( {\frac{{G_{E} (t)}}{{G_{SS} }}} \right)^{IPRG}$$ (12) where I ( t 0 ) is the initial amount of insulin in the central compartment with units of pmol, and the parameters, I SS (steady-state insulin concentration), V I (central volume of distribution), S incr (slope coefficient contributing to the incretin effect triggered by the amount of glucose in the transit compartment ( G T ) following glucose absorption), and G SS (steady-state glucose concentration). G E is the concentration in the glucose effect compartment that accounts for the regulation of insulin secretion with the power coefficient IPRG , and is expressed as a function of the amount of glucose in the central compartment ( G C ) as F 1 ( G C ). Thus, the insulin secretion is clearly affected by the nonlinear function of the glucose concentration via an effect compartment ( G E ), and consequently the solution I is expressed as a function of G C as: $$I(t) = F_{2} (t,G_{C} )$$ (13) Considering the form of Eqs. 1 , 12 may be rewritten as: $$\frac{dI}{dt} = f(t,G_{E} ) + A(t,I) \cdot I(t) = f\left( {t,F_{1} (G_{C} )} \right) + A \cdot I(t);\quad I(t_{0} ) = I_{SS} \cdot V_{I}$$ $$f(t,G_{E} ) = (I_{SS} \cdot CL_{I} ) \cdot \left( {1 + S_{incr} \cdot G_{T} (t)} \right) \cdot \left( {\frac{{G_{E} (t)}}{{G_{SS} }}} \right)^{IPRG} ,\,\,\,\,\,A(t,I) = - \frac{{CL_{I} }}{{V_{I} }}$$ (14) Meanwhile, glucose concentrations are described by a 2-compartment model with endogenous glucose production ( G PROD ) into the central compartment. Glucose elimination is expressed with an insulin-independent and an insulin-dependent clearance ( CL G and CL GI , respectively). Glucose absorption from the gut is described by a first-order process (rate constant k a ) via a transit compartment. The amount of glucose in the central compartment ( G C ) is expressed in the form: $$\frac{{dG_{C} }}{dt} = k_{a} \cdot G_{T} (t) + G_{PROD} + \frac{Q}{{V_{p} }}G_{P} (t) - \frac{{(CL_{G} + CL_{GI} \cdot I_{E} (t) + Q)}}{{V_{G} }} \cdot G_{C} (t);\quad G_{C} (t_{0} ) = G_{SS} \cdot V_{G}$$ $$G_{PROD} = G_{SS} \cdot (CL_{G} + CL{}_{GI} \cdot I_{SS} )$$ (15) where G C ( t 0 ) is the initial amount of glucose in the central compartment with units of mmol, G P is the amount of glucose in the peripheral compartment, and the parameters, Q (intercompartmental clearance), V P (peripheral volume of distribution), and V G (central volume of distribution). I E is the concentration in the insulin effect compartment that accounts for the regulation of insulin-dependent glucose clearance CL GI , and is expressed as a function of the amount of insulin in the central compartment ( I ) as F 3 ( I ).Considering the form of Eqs. 1 , 15 may be rewritten as: $$\frac{{dG_{C} }}{dt} = f(t,G_{C} ) + A(t,I_{E} ) \cdot G_{C} (t) = f(t) + A\left( {t,F_{3} (I)} \right) \cdot G_{C} (t);\quad G_{C} (t_{0} ) = G_{SS} \cdot V_{G}$$ $$f(t,G_{C} ) = k_{a} \cdot G_{T} (t) + G_{SS} \cdot (CL_{G} + CL{}_{GI} \cdot I_{SS} ) + \frac{Q}{{V_{p} }}G_{P} (t),\,\,\,\,\,A(t,I_{E} ) = - \frac{{(CL_{G} + CL_{GI} \cdot I_{E} (t) + Q)}}{{V_{G} }}$$ (16) Substituting Eq. 13 into Eq. 16 gives a single differential equation for G C which indirectly depends on itself as: $$\frac{{dG_{C} }}{dt} = f(t) + A\left( {t,F_{3} \left( {F_{2} (G_{C} )} \right)} \right) \cdot G_{C} (t);\quad G_{C} (t_{0} ) = G_{SS} \cdot V_{G}$$ (17) From Eq. 16 the solution of G C is expressed as a function of I as: $$G_{C} (t) = F_{4} (t,I)$$ (18) and substituting this into Eq. 14 gives a single differential equation for I which indirectly depends on itself as: $$\frac{dI}{dt} = f\left( {t,F_{1} \left( {F_{4} (I)} \right)} \right) + A \cdot I(t);\quad I(t_{0} ) = I_{SS} \cdot V_{I}$$ (19) From Eqs. 17 – 19 the IGI model can obviously be classified into the system of nonlinear ODEs with recursive (feedback) systems. With the inductive approximation starting with the naive initial approximations for the specific parts causing the nonlinearity in ODEs, we can now generate successive approximations inductively which converge to the solution for all seven states. When using G E [0] ( t ) in Eq. 12 and/or I E [0] ( t ) in Eq. 15 , the amount of insulin and glucose in the central compartment is inductively expressed in the form: $$\frac{{dI^{[n]} }}{dt} = (I_{SS} \cdot CL_{I} ) \cdot \left( {1 + S_{incr} \cdot G_{T}^{[n]} (t)} \right) \cdot \left( {\frac{{G_{E}^{[n - 1]} (t)}}{{G_{SS} }}} \right)^{IPRG} - \frac{{CL_{I} }}{{V_{I} }} \cdot I^{[n]} (t);\quad I^{[n]} (t_{0} ) = I_{SS} \cdot V_{I}$$ (20) $$\frac{{dG_{C}^{[n]} }}{dt} = k_{a} \cdot G_{T}^{[n]} (t) + G_{PROD} + \frac{Q}{{V_{p} }}G_{P}^{[n]} (t) - \frac{{(CL_{G} + CL_{GI} \cdot I_{E}^{[n - 1]} (t) + Q)}}{{V_{G} }} \cdot G_{C}^{[n]} (t);\quad G_{C}^{[n]} (t_{0} ) = G_{SS} \cdot V_{G}$$ (21) Here the naive initial approximation for concentrations of insulin and glucose in the effect compartment ( G E [0] ( t ) = G SS and I E [0] ( t ) = I SS for all t ) is used for inductive approximations. Other initial approximations could be chosen including G C [0] ( t ) in Eq. 14 and/or I [0] ( t ) in Eq. 16 . Differential equations for remaining states are the same with the original equations except the use of y [n] to denote the nth iteration rather than y for responses.
We consider the solution of all 7 states in the IGI model with inductive approximations and either N1 or A1–A5 applied in the previous example. For the trapezoidal method (A1), the increment to approximate the integrals was set to 0.01 h, and as an additional naïve initial approximation G P [0] ( t ) = G SS · V P (for all t ) was also used in Eq. 21 , to avoid the complexity in approximating the integrals. For Gaussian quadrature (A2), the number of points for abscissas was set to 5. For Laplace transforms (A3), the step size h shown in the previous section was set to 0.01 h. For NILT (A4), the step size h was also set to 0.01 h, and the number of points in fast Fourier transformations to 2 8 . For the ME solution (A5), the step size h was set to 0.01 h, and a Padé approximation was used to calculate the matrix exponential as the eigenvector matrix was not positive definite when applying a decomposition to the IGI model. Simulations were conducted based on the original study design where the subject underwent a 24-h meal test study with scheduled meals at 8 a.m., 2 p.m., and 8 p.m. and snacks at 11 a.m., 5 p.m., and 11 p.m. The detail of the study design can be found in the original paper [ ].
Figure 2 (b and c, middle panels) shows the results of the first 15 iterations with respect to the reference method (R1) for insulin and glucose concentrations when using method A5. The results using other methods are shown in the Supplementary Material. Figure 3 (b, middle panel) shows the results with respect to the solution time for all methods except for the quadrature method (A2). With the method A2 (Gaussian quadrature) the solution could not be obtained within a month with n = 4, indicating that this method may not be practical for some examples. With all of the methods tested the inductive approximations approached the solution provided by the reference R1 as the number of iterations increased. With the trapezoidal method (A1) the inductive approximation approached the solution with fewer iterations compared to other methods. In this case the method N1 provided the final solution ( n = 15) with comparable solution time to the reference R1. The solution times of analytical methods were however longer by 1 or 2 orders of magnitude, albeit the absolute times remained fast (approx. 100 s). Out of all analytical methods tested, the matrix exponential method (A5) provided the final solution with the shortest solution time.
HIV viral load model (E3)
Here the inductive approximation is applied to the HIV viral load model (latent dynamic model) of which the schematic representation is shown in Fig. 5 . This model consists of the following five states: target non-infected CD4 cells ( T NI ), latently infected CD4 cells ( T L ), actively infected CD4 cells ( T A ), infectious viruses ( V IN ), and noninfectious viruses ( V NI ). Please note that here “ V ” represents the viral load with units of copies/mL rather than the volume of distribution. The differential equations in this system are defined in the form: $$\frac{{dT_{NI} }}{dt} = \lambda - \left( {1 - INH_{RTI} } \right) \cdot \gamma \cdot T_{NI} \cdot V_{IN} - d_{NI} \cdot T_{NI} ;\quad T_{NI} (t_{0} ) = \frac{{d_{A} \cdot d_{V} \cdot (\alpha_{L} + d_{L} )}}{{\gamma \cdot p \cdot (\alpha_{L} + f_{r} \cdot d_{L} )}}$$ (22) $$\frac{{dT_{L} }}{dt} = \left( {1 - f_{r} } \right) \cdot \left( {1 - INH_{RTI} } \right) \cdot \gamma \cdot T_{NI} \cdot V_{IN} - \alpha_{L} \cdot T_{L} - d_{L} \cdot T_{L} ;\quad T_{L} (t_{0} ) = \frac{{\left( {1 - f_{r} } \right) \cdot \gamma \cdot T_{NI} (t_{0} ) \cdot V_{IN} (t_{0} )}}{{\alpha_{L} + d_{L} }}$$ (23) $$\frac{{dT_{A} }}{dt} = f_{r} \cdot \left( {1 - INH_{RTI} } \right) \cdot \gamma \cdot T_{NI} \cdot V_{IN} + \alpha_{L} \cdot T_{L} - d_{A} \cdot T_{A} ;\quad T_{A} (t_{0} ) = \frac{{d_{V} \cdot V_{IN} (t_{0} )}}{p}$$ (24) $$\frac{{dV_{IN} }}{dt} = (1 - INH_{PI} ) \cdot p \cdot T_{A} - d_{V} \cdot V_{IN} ;\quad V_{IN} (t_{0} ) = \frac{{\lambda - d_{NI} \cdot T_{NI} (t_{0} )}}{{\gamma \cdot T_{NI} (t_{0} )}}$$ (25) $$\frac{{dV_{NI} }}{dt} = INH_{PI} \cdot p \cdot T_{A} - d_{V} \cdot V_{NI} ;\quad V_{NI} (t_{0} ) = 0$$ (26) where λ is the activation rate constant of T NI ; d NI the death rate constant of T NI ; γ the infection rate constant of T NI ; f r the fraction of T NI which becomes T A ; d A the death rate constant of T A ; d L the death rate constant of T L ; α L the reactivation rate constant of T L ; p the viral production rate constant of T A ; d V the death rate constant of virus; INH RTI the drug effect by the reverse transcriptase inhibitor (RTI); INH PI the drug effect by the protease inhibitor (PI). INH RTI and INH PI are set to 0.90 and 0.75, respectively. The other parameter values can be found in the original paper published by Lavielle et al. [ ]. Fig. 5 Schematic representation of the HIV viral load model. Parameter definitions can be found in the text
This HIV viral load model is also classified into the system of nonlinear ODEs as the infection rate of target non-infected CD4 cells (second term in the right side of Eq. 22 ) and the production rate of the other CD4 cells are expressed with the second-order term of the two states, non-infected CD4 cells ( T NI ) and infectious viruses ( V IN ). In addition to the nonlinearity, there is a large difference in the rate constants among the differential equations, e.g. the value between d NI (=0.0085/day) and d V (=30/day) differs in the order of 10 4 . Thus this model is also classified into the system of stiff ODEs. The inductive approximation started with the naive initial approximation only for the infectious viruses as V IN [0] ( t ) = V IN ( t 0 ) (for all t ). Successive approximations can now be generated inductively which converge to the solution for all states. As an instance, the target non-infected CD4 cells are inductively expressed in the form: $$\frac{{dT_{NI}^{[n]} }}{dt} = \lambda - \left( {1 - INH_{RTI} } \right) \cdot \gamma \cdot T_{NI}^{[n]} (t) \cdot V_{IN}^{[n - 1]} (t) - d_{NI} \cdot T_{NI}^{[n]} (t);\quad T_{NI}^{[n]} (t_{0} ) = \frac{{d_{A} \cdot d_{V} \cdot (\alpha_{L} + d_{L} )}}{{\gamma \cdot p \cdot (\alpha_{L} + f_{r} \cdot d_{L} )}}$$ (27) Differential equations for remaining states are obtained by replacing V IN in the right side in Eqs. 23 and 24 with V IN [ n −1] , and by using y [n] to denote the nth iteration rather than y for responses. We consider the solution of all five states in the HIV viral load model with inductive approximations. Here we focus only on the method N1, and one of the analytical methods, A5 (matrix exponentials) based on the accuracy and shorter solution time obtained in the previous two examples. As a numerical time-stepping solver ode15s in MATLAB was used for the reference R1. This is a stiff differential equation solver based on the Gear integrator technique, and is expected to be suitable for solving this “stiff” system. Previous runs with ode45 resulted in similar predictions (see the Supplementary Material) but in run times that were three orders of magnitude longer than ode15s . The stiff solver was also selected for the method N1. For the ME solution (A5), the step size h was set to 10 days, and a Padé approximation was used to calculate the matrix exponentials. Simulations were conducted based on the original study design where the subject was followed 1 year after treatment initiation. The detail of the study design can be found in the original paper [ ].
Figure 2 (d and e, bottom panels) shows the results of the first 18 iterations with respect to the reference method (R1) for the viral load ( V IN + V NI ) and CD4 counts ( T NI + T L + T A ) when using method A5. The results using the method N1 are shown in the Supplementary Material. The final solution for CD4 counts was obtained with fewer iterations compared to the viral load, even when n = 6. Figure 3 (c, bottom panel) shows the results with respect to the solution time for all methods (R1, N1, and A5). The method N1 as well as A5 provided the final solution ( n = 18) with comparable solution time to the reference R1.
Turnover model of luteinizing hormone (LH) with surge function (E4)
Here we explore the potential advantages of analytical methods compared with time-stepping ODE solvers to solve the linear time-varying system. This is equivalent to solving a nonlinear ODE after inductive linearization. Here we consider a turnover model of LH which is a linear time-varying system, i.e. no inductive approximation is required in this system. The key component of this turnover model is the existence of surge function to describe the preovulatory LH surge in women, and the drug (cetrorelix) causes a delay in this surge and consequently ovulation. In the model plasma concentrations of cetrorelix are described by a 2-compartment model with first-order absorption and elimination. In addition, the profile of LH is captured by a turnover model with (i) plasma concentration–time profiles of cetrorelix as a driver of LH suppression, and (ii) concentration–time profiles of cetrorelix in the effect compartment as a driver of delaying the surge in LH. This turnover model is defined in the form: $$\frac{dLH}{dt} = R_{in} \cdot \left( {1 - \frac{{C_{c} }}{{IC_{50} + C_{c} }}} \right) \cdot \left( {1 + surge} \right) - k_{out} \cdot LH;\quad LH(t_{0} ) = \frac{{R_{in} }}{{k_{out} }}$$ $$surge = SA \cdot \left( {\left( {\frac{{t - \left( {T_{0} + \frac{{E_{\hbox{max} } \cdot C_{e} }}{{EC_{50} + C_{e} }}} \right)}}{SW}} \right)^{4} + 1} \right)^{ - 1}$$ (28) where LH ( t 0 ) is the initial concentration of LH with units of mIU/mL, C c the plasma concentration of cetrorelix, R in the zero-order release rate constant of LH, k out the first-order elimination rate constant of LH, IC 50 the plasma concentration of cetrorelix causing 50% of maximum suppression, C e the plasma concentration of cetrorelix in the effect compartment, SA the surge amplitude, T 0 the LH surge day in the absence of drug, E max the maximum delay, EC 50 the plasma concentration of cetrorelix in the effect compartment causing 50% of the maximum delay, and SW the surge width. The parameter values can be found in the original paper published by Nagaraja et al. [ ]. Here the parameter values after the multiple administration of cetrorelix 0.5 mg are used.
Based on the accuracy and shorter solution time obtained in the previous examples, we only focus on the method A5 (without inductive approximation). For the ME solution (A5), the step size h was set to 1 h, and a Padé approximation was used to calculate matrix exponentials. Simulations were conducted based on the original study design where multiple doses were administered once a day from day 3 to day 16 (14 doses). The detail of the study design can be found in the original paper [ ].
Figure 6 (a, top panel) shows the results with respect to the accuracy for LH. The reference R1 as well as the method A5 provided an equivalently accurate solution. The solution time was also comparable between the reference R1 and the method A5 (0.48 and 0.10 s, respectively). Fig. 6 Solutions of LH turnover model with surge function (E4). a original model; b reformed model. LH luteinizing hormone (Color figure online)
We also applied the similar but partially reformed following model in which the surge was approximated by a square wave: $$\frac{dLH}{dt} = R_{in} \cdot \left( {1 + surge} \right) - k_{out} \cdot LH;\quad LH(t_{0} ) = \frac{{R_{in} }}{{k_{out} }}$$ $$surge = SA \cdot H(T_{0} - SW \le t \le T_{0} + SW)$$ (29) where H (.) is an indicator function which takes 1 when the condition shown within brackets meets (0 for the other conditions). In this reformed model the drug effect is not considered (suppose as a “placebo” arm) to make the situation simple. Figure 6 (b, bottom panel) shows the results with respect to the accuracy in this system. While the method A5 provided the exact solution, the reference R1 could not find the surge (even when the timing of the surge was a required time in the time-stepping solution).
Discussion
In this study we explored the performance of an inductive approximation which iteratively transforms systems of nonlinear ODEs to linear time-varying. After the inductive approximation, the system can then be solved algebraically or numerically, and hence we explored the application of possible numerical or analytical methods (N1 or A1–A5) for solving linear time-varying systems.
Analytical methods coupled with inductive approximations provided accurate predictions in the examples considered. The setting required for each method (e.g. increment in the trapezoidal method to approximate the integrals in Eq. 5 ) was chosen so that each method could efficiently but still accurately provide the solution. For example, with the trapezoidal method a smaller increment (0.01, with units of hours) was required for the example E2 compared to the simpler case E1 (0.1, with units of hours). This implies that the setting for each method depends on the complexity of system, especially on how each state changes over time.
Out of the analytical methods tested, a matrix exponential (ME) solution (A5) provided the best results from the view point of accuracy and runtimes for all examples. The ME solution also provides the benefit of being directly applicable to future model manipulation, for example the scale reduction (“lumping”) of complicated PKPD systems. An example illustrating the link between lumping and the ME solution is given in Appendix 1. In contrast, the solution time of exact Laplace transforms (A3) was generally 100 times longer, whereas numerical inversion of the Laplace transforms, NILT (A4) was both accurate and had relatively short solution times making this a feasible option of the analytical methods evaluated. Focusing on accuracy, all of these analytical methods (A3–A5) performed well even with the additional necessity to use time-invariant coefficients in a time-stepping manner (see “ Theory ” Sect.). Gauss–Legendre quadrature (A2) however could not provide an accurate solution within a practical solution time frame in the example E2. Even in the example E1, the method A2 provided the final solution with the longest solution time out of all the methods tested. This method conditions the scale of the quadrature abscissas on the previous iteration’s response ( y [n−1] ( τ ) and y [n−1] ( v ) in Eq. 5 ) which in some cases cannot be obtained directly, rather than on the original time scale ( y [n−1] ( t ) in Eq. 5 ) which can be obtained directly from the previous iteration. It should also be noted that we need to obtain several y [n−1] ( τ ) at each t , according to the number of points for abscissa. This makes the calculation computationally intensive, and hence the solution cannot always be obtained within a realistic timeframe, especially in the complex system with multiple states as with example E2. In contrast to Gaussian quadrature, the trapezoidal method (A1) however directly uses y [n−1] ( t ), and hence can provide an update in the prediction within a shorter solution timeframe. A1 also performed well from the view point of accuracy although the approximation of integrals (in Eq. 5 ) by the trapezoidal method can be very dependent on the resolution of the step-size. We also saw with A1 that the inductive approximation approached the solution with fewer iterations compared with the other analytical methods for example E2. The whole solution time was however not shorter compared to other methods, such as a matrix exponential solution (A5). Although even with A5 runtimes were in some cases longer compared to numerical time stepping solvers, an environmental change for computation (e.g. parallel computing) may streamline the process to obtain a solution within each (small) step size.
We see in this work that the number of iterations required for the examples varied from six (E1 and E3 for CD4 count) to 18 (E3 for viral load). Whereas in the example E1 which is the simplest situation tested n = 6 provided the sufficient solution, n = 15 was required in the example E2. In the stiff system E3, as might be expected, a sufficient number of iterations differed between response variables, i.e. fewer required for CD4 count ( n = 6) than the HIV viral load ( n = 18). This may be due to the large (direct) drug effect for CD4 count ( INH RTI = 90%). We can see from Eq. 27 that the contribution of the second term of the right hand side can be negligible when the value of INH RTI is large enough. In this case the inductive part in the second term ( V IN [ n −1] ( t )) does not drastically affect the profile of CD4 count and hence the required number of iterations for CD4 count is lower than for the HIV viral load. Meanwhile, through the examples, the method to be used after inductive approximations (N1 or A1–A5) mostly did not affect the sufficient number of iterations (see Fig. 2 , except the method A1 and A2). This implies that the sufficient number of iterations depends on the complexity of model structure and parameter values, rather than the method to be applied after inductive approximations. The inductive approximations however converge to the reference solution (time-stepping solvers in the original nonlinear ODE systems) for all examples, irrespective of complexity (e.g. E2) or stiffness of the system (e.g. E3). Even when no closed-form exact solutions are available, in most cases a test run of the solution of a numerical time-stepping solver with the original nonlinear ODE system can be used as a reference. An alternative method could involve assessing the accuracy and convergence of the inductive approximations by running another step (i.e. n + 1) and comparing the differences. Convergence may also be assessed by computing the difference in the vector of responses between successive iterations.
Although from the view point of accuracy and solution time the method N1 provided comparable results to the best analytical method A5 (using matrix exponentials), the solution time was dependent on the choice of time-stepping methods based on the stiffness of the problem in the example E3 ( ode15s and ode45) . This clearly implies that there is a need to match the method to the structure of the problem irrespective of whether time-stepping method is used from the outset or an inductive linearization followed by analytical integration. A clear benefit of linearization tagged with an analytical solution was evident in evaluation of the empirical surge model where time-stepping solvers could not capture the change of response in the square wave example E4. This is a difficult test for a time-stepping integrator as no information would be available from the derivatives of the response variable over time and hence the possible change in the gradient not anticipated. This issue is not expected when using analytical methods since these methods are conditioned on the model response. Although the approximation applied may be an extreme case, it can be appropriate in some cases where an external (non-biological) operation exists, e.g. PK model with dialysis for the renally eliminated drug.
In conclusion, the inductive linearization coupled with a matrix exponential solution provided accurate predictions from all examples with comparable solution time to the matched time-stepping solutions for nonlinear ODEs. The time-stepping solutions however did not perform well for some cases from the view point of accuracy and solution time. In circumstances when either a linear ODE is particularly desirable or the uncertainty in matching the integrator to the ODE system is of potential risk, then the inductive approximation method would be an appropriate alternative.